// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopeeFoodClone.WebApi.Stores.Infrastructure.Persistence;

#nullable disable

namespace ShopeeFoodClone.WebApi.Stores.Infrastructure.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20250313031132_AddCodeNameColumnForCategories")]
    partial class AddCodeNameColumnForCategories
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoryStore", b =>
                {
                    b.Property<Guid>("CategoriesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StoresId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CategoriesId", "StoresId");

                    b.HasIndex("StoresId");

                    b.ToTable("CategoryStore");
                });

            modelBuilder.Entity("ShopeeFoodClone.WebApi.Stores.Domain.Entities.AdministrativeRegion", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<string>("CodeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeNameEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEng")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AdministrativeRegions");
                });

            modelBuilder.Entity("ShopeeFoodClone.WebApi.Stores.Domain.Entities.AdministrativeUnit", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<string>("CodeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeNameEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullNameEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortNameEng")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AdministrativeUnits");
                });

            modelBuilder.Entity("ShopeeFoodClone.WebApi.Stores.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ConcurrencyStamp")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ShopeeFoodClone.WebApi.Stores.Domain.Entities.District", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<byte?>("AdministrativeUnitId")
                        .IsRequired()
                        .HasColumnType("tinyint");

                    b.Property<string>("CodeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullNameEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProvinceCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Code");

                    b.HasIndex("AdministrativeUnitId")
                        .HasDatabaseName("idx_districts_unit");

                    b.HasIndex("ProvinceCode")
                        .HasDatabaseName("idx_districts_province");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("ShopeeFoodClone.WebApi.Stores.Domain.Entities.Province", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<byte?>("AdministrativeRegionId")
                        .IsRequired()
                        .HasColumnType("tinyint");

                    b.Property<byte?>("AdministrativeUnitId")
                        .IsRequired()
                        .HasColumnType("tinyint");

                    b.Property<string>("CodeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullNameEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEng")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.HasIndex("AdministrativeRegionId")
                        .HasDatabaseName("idx_provinces_region");

                    b.HasIndex("AdministrativeUnitId")
                        .HasDatabaseName("idx_provinces_unit");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("ShopeeFoodClone.WebApi.Stores.Domain.Entities.Store", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeOnly>("ClosingHour")
                        .HasColumnType("time");

                    b.Property<string>("CoverImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPromoted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeOnly>("OpeningHour")
                        .HasColumnType("time");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<int>("Sold")
                        .HasColumnType("int");

                    b.Property<string>("StreetName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WardCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("WardCode");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("ShopeeFoodClone.WebApi.Stores.Domain.Entities.SubCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("ConcurrencyStamp")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("SubCategories");
                });

            modelBuilder.Entity("ShopeeFoodClone.WebApi.Stores.Domain.Entities.Ward", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<byte?>("AdministrativeUnitId")
                        .IsRequired()
                        .HasColumnType("tinyint");

                    b.Property<string>("CodeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistrictCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullNameEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEng")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.HasIndex("AdministrativeUnitId")
                        .HasDatabaseName("idx_wards_unit");

                    b.HasIndex("DistrictCode")
                        .HasDatabaseName("idx_wards_district");

                    b.ToTable("Wards");
                });

            modelBuilder.Entity("CategoryStore", b =>
                {
                    b.HasOne("ShopeeFoodClone.WebApi.Stores.Domain.Entities.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopeeFoodClone.WebApi.Stores.Domain.Entities.Store", null)
                        .WithMany()
                        .HasForeignKey("StoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShopeeFoodClone.WebApi.Stores.Domain.Entities.District", b =>
                {
                    b.HasOne("ShopeeFoodClone.WebApi.Stores.Domain.Entities.AdministrativeUnit", "AdministrativeUnit")
                        .WithMany()
                        .HasForeignKey("AdministrativeUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("districts_administrative_unit_id_fkey");

                    b.HasOne("ShopeeFoodClone.WebApi.Stores.Domain.Entities.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("districts_province_code_fkey");

                    b.Navigation("AdministrativeUnit");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("ShopeeFoodClone.WebApi.Stores.Domain.Entities.Province", b =>
                {
                    b.HasOne("ShopeeFoodClone.WebApi.Stores.Domain.Entities.AdministrativeRegion", "AdministrativeRegion")
                        .WithMany()
                        .HasForeignKey("AdministrativeRegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("provinces_administrative_region_id_fkey");

                    b.HasOne("ShopeeFoodClone.WebApi.Stores.Domain.Entities.AdministrativeUnit", "AdministrativeUnit")
                        .WithMany()
                        .HasForeignKey("AdministrativeUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("provinces_administrative_unit_id_fkey");

                    b.Navigation("AdministrativeRegion");

                    b.Navigation("AdministrativeUnit");
                });

            modelBuilder.Entity("ShopeeFoodClone.WebApi.Stores.Domain.Entities.Store", b =>
                {
                    b.HasOne("ShopeeFoodClone.WebApi.Stores.Domain.Entities.Ward", "Ward")
                        .WithMany()
                        .HasForeignKey("WardCode")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("ShopeeFoodClone.WebApi.Stores.Domain.Entities.SubCategory", b =>
                {
                    b.HasOne("ShopeeFoodClone.WebApi.Stores.Domain.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ShopeeFoodClone.WebApi.Stores.Domain.Entities.Ward", b =>
                {
                    b.HasOne("ShopeeFoodClone.WebApi.Stores.Domain.Entities.AdministrativeUnit", "AdministrativeUnit")
                        .WithMany()
                        .HasForeignKey("AdministrativeUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("wards_administrative_unit_id_fkey");

                    b.HasOne("ShopeeFoodClone.WebApi.Stores.Domain.Entities.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("wards_district_code_fkey");

                    b.Navigation("AdministrativeUnit");

                    b.Navigation("District");
                });
#pragma warning restore 612, 618
        }
    }
}
